name: Publish Release Assets

concurrency:
  group: production
  cancel-in-progress: true

permissions:
  contents: write

on:
  release:
    types: [published]

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Build
        run: |
          source ./scripts/bootstrap.sh
          ./scripts/build.sh
        shell: bash

      - name: Archive assets
        run: |
          tar -czf "./dist/ccr_${{ matrix.os }}_${GITHUB_REF_NAME}_amd64.tar.gz" -C ./dist ccr
        shell: bash

      - name: Upload assets
        run: |
          gh release upload $GITHUB_REF_NAME ./dist/ccr_${{ matrix.os }}_${GITHUB_REF_NAME}_amd64.tar.gz --clobber
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}

  macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Build
        run: |
          source ./scripts/bootstrap.sh
          ./scripts/build.sh
        shell: bash

      - name: Archive assets
        run: |
          tar -czf "./dist/ccr_macos_${GITHUB_REF_NAME}_amd64.tar.gz" -C ./dist ccr
        shell: bash

      - name: Upload assets
        run: |
          gh release upload $GITHUB_REF_NAME ./dist/ccr_macos_${GITHUB_REF_NAME}_amd64.tar.gz --clobber
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}

  windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Build
        run: |
          ./scripts/bootstrap.ps1
          ./scripts/build.ps1
        shell: pwsh

      - name: Archive assets
        run: |
          $compress = @{
            Path = "./dist/ccr.exe"
            CompressionLevel = "Fastest"
            DestinationPath = "./dist/ccr_windows_${env:GITHUB_REF_NAME}_amd64.zip"
          }
          Compress-Archive @compress
        shell: pwsh

      - name: Upload assets
        run: |
          gh release upload $env:GITHUB_REF_NAME ./dist/ccr_windows_${env:GITHUB_REF_NAME}_amd64.zip --clobber
        shell: pwsh
        env:
          GH_TOKEN: ${{ github.token }}
